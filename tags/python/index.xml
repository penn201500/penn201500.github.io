<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on learn better， learn more</title>
    <link>http://learnbetter.club/tags/python/</link>
    <description>Recent content in Python on learn better， learn more</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>penn201500@gmail.com (penn)</managingEditor>
    <webMaster>penn201500@gmail.com (penn)</webMaster>
    <lastBuildDate>Fri, 29 Jul 2016 22:04:40 +0000</lastBuildDate>
    <atom:link href="http://learnbetter.club/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>python3 比较两个list的结构</title>
      <link>http://learnbetter.club/2016/07/python3-compare-2-list-structure/</link>
      <pubDate>Fri, 29 Jul 2016 22:04:40 +0000</pubDate>
      <author>penn201500@gmail.com (penn)</author>
      <guid>http://learnbetter.club/2016/07/python3-compare-2-list-structure/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;题目:a06e0b8a1a0fcadb915c5192e88ddda3&#34;&gt;题目：&lt;/h2&gt;

&lt;p&gt;比较两个list的结构，如：
a = [1,2,3]
b = [4,5,6]
则两个list的结构相同
如：
a = [1,2,3,[4,5,6,[7]]]
b = [1,[2],[3]]
则两个list的结构不同&lt;/p&gt;

&lt;h2 id=&#34;思路:a06e0b8a1a0fcadb915c5192e88ddda3&#34;&gt;思路：&lt;/h2&gt;

&lt;p&gt;print list的时候会将list的括号、逗号都打印出来。获取打印结果中的括号、逗号作为list的结构。比较即可得知两个list结构是否相同&lt;/p&gt;

&lt;h2 id=&#34;代码:a06e0b8a1a0fcadb915c5192e88ddda3&#34;&gt;代码：&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys
from io import StringIO

a = [1,2,3]
b = [1,2]
c = [1,2,3,[4,5,6,[7]]]
d = [2,3,4,[5,6,7,[8]]]

def compare(a,b):
    #get print out
    #how to use StringIO()
    stdout = sys.stdout 
    stream = StringIO()
    sys.stdout = stream
    print(a)
    print(b)
    sys.stdout = stdout
    
    variable = str(stream.getvalue())
    res = variable.split(&#39;\n&#39;)
    # print(variable.split(&#39;\n&#39;))
    
    str_a = res[0]
    str_b = res[1]
    
    struct_a = &#39;&#39;.join([x for x in res[0] if x in [&#39;,&#39;,&#39;[&#39;,&#39;]&#39;]])
    struct_b = &#39;&#39;.join([x for x in res[1] if x in [&#39;,&#39;,&#39;[&#39;,&#39;]&#39;]])
    
    
    # print(str_a)
    # print(str_b)
    # print(type(str_a))
    # print(struct_a)
    # print(struct_b)
    
    if struct_a == struct_b: return &#39;True&#39;
    else: return &#39;False&#39;

print(compare(a,b))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行结果：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;print(compare(a,b))
False
&amp;gt;&amp;gt;&amp;gt;print(compare(c,d))
True
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;
&lt;a href=&#34;http://stackoverflow.com/questions/14197009/how-can-i-redirect-print-output-of-a-function-in-python&#34;&gt;http://stackoverflow.com/questions/14197009/how-can-i-redirect-print-output-of-a-function-in-python&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>python3 脚本爬取今日百度热点新闻并存放到mysql数据库</title>
      <link>http://learnbetter.club/2016/07/python3-get-baidu-hotnews-and-store-in-mysqldb/</link>
      <pubDate>Mon, 25 Jul 2016 23:04:40 +0000</pubDate>
      <author>penn201500@gmail.com (penn)</author>
      <guid>http://learnbetter.club/2016/07/python3-get-baidu-hotnews-and-store-in-mysqldb/</guid>
      <description>

&lt;hr /&gt;

&lt;h2 id=&#34;目标:11bfdbe1d89d745ab58d188de057bb45&#34;&gt;目标&lt;/h2&gt;

&lt;p&gt;python3.x 脚本爬取今日百度热点新闻并存放到mysql数据库&lt;/p&gt;

&lt;h2 id=&#34;环境准备:11bfdbe1d89d745ab58d188de057bb45&#34;&gt;环境准备&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;安装pymysql
&lt;code&gt;pip install pymysql&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;下载安装mysql 5.x&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;知识点:11bfdbe1d89d745ab58d188de057bb45&#34;&gt;知识点&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;python3.x 使用pymysql来与mysqlDB交互；可以使用 pip install pymysql 命令安装pymysql&lt;/li&gt;
&lt;li&gt;pymysql的使用： &lt;a href=&#34;http://www.runoob.com/python3/python3-mysql.html&#34;&gt;http://www.runoob.com/python3/python3-mysql.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mysql的一些用法：
show databases;
use test;
show tables;
drop tables;&lt;/li&gt;
&lt;li&gt;格式化时间：time.strftime(&amp;lsquo;%Y-%m-%d %H:%M:%S&amp;rsquo;,time.localtime(time.time()))&lt;/li&gt;
&lt;li&gt;某表不存在时创建该表：
sql = &amp;ldquo;&amp;rdquo;&amp;ldquo;CREATE TABLE IF NOT EXISTS %s (
           text  VARCHAR(200),
           time  VARCHAR(200),
           date VARCHAR(200))&amp;ldquo;&amp;rdquo;&amp;rdquo; % (table,)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;代码:11bfdbe1d89d745ab58d188de057bb45&#34;&gt;代码&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/env python3
# -*- coding: utf-8 -*-

from urllib.error import URLError, HTTPError
import urllib.request
import re
import time
import pymysql

class GetAndStore:
    def __init__(self):
        pass

    #function
    def printHotNews(self,url):
        content = urllib.request.urlopen(url).read().decode(&#39;gbk&#39;)
        pattern = re.compile(&#39;&amp;lt;li class=&amp;quot;hd.*?&amp;lt;strong&amp;gt;.*?&amp;lt;a.*?&amp;gt;(.*?)&amp;lt;/a&amp;gt;.*?strong&amp;gt;&#39;, re.S)
        hotNews = re.findall(pattern, content)
        for i in hotNews:
            print(i) 
        return hotNews    
    
    #function can be reused
    def storeDB(self,table,news):
        #use dict store news
        news_date = time.strftime(&#39;%Y-%m-%d&#39;,time.localtime(time.time()))
        news_time = time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time()))
        #test insert only 1 record
        text = &amp;quot;&#39;&amp;quot; + news[0] + &amp;quot;&#39;&amp;quot;  #Chinese character and symbol
        time_now = &amp;quot;&#39;&amp;quot; + news_time + &amp;quot;&#39;&amp;quot;
        date = &amp;quot;&#39;&amp;quot; + news_date + &amp;quot;&#39;&amp;quot;

        #connect mysqlDB
        conn = pymysql.connect(
            host=&#39;127.0.0.1&#39;, 
            port=3306, 
            user=&#39;root&#39;, 
            passwd=&#39;root&#39;, 
            db=&#39;test&#39;,
            use_unicode=1,
            charset=&#39;utf8&#39;)
    
        try:
            with conn.cursor() as cursor:
                #create a table
                sql = &amp;quot;&amp;quot;&amp;quot;CREATE TABLE IF NOT EXISTS %s (
                            text  VARCHAR(200),
                            time  VARCHAR(200),
                            date VARCHAR(200))&amp;quot;&amp;quot;&amp;quot; % (table,)
                cursor.execute(sql)
                # Create a new record
                sql = &amp;quot;INSERT INTO %s (%s,%s,%s) VALUES (%s,%s,%s)&amp;quot; % (table, &#39;text&#39;, &#39;date&#39;, &#39;time&#39;, text, date, time_now)
                cursor.execute(sql)
                # connection is not autocommit by default. So you must commit to save
                # your changes.
                conn.commit()
    
            with conn.cursor() as cursor:
                # Read all records
                sql = &amp;quot;SELECT * FROM (%s) &amp;quot; %(table,)
                cursor.execute(sql)
                result = cursor.fetchall()
                print(result)
                cursor.close()
        finally:
            conn.close()

        
if __name__ == &amp;quot;__main__&amp;quot;:    
    #variable
    url = &#39;http://news.baidu.com/&#39;
    instance1 = GetAndStore()  #create an instance
    
    try:
        response = urllib.request.urlopen(url)
    except HTTPError as e:
        # http error
        print(&#39;Error code: &#39;, e.code)
    except URLError as e:
        # url error
        print(&#39;Reason: &#39;, e.reason)
    else:
        # excute function
        instance1.printHotNews(url)
        instance1.storeDB(&amp;quot;table1&amp;quot;, instance1.printHotNews(url))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;脚本执行结果:11bfdbe1d89d745ab58d188de057bb45&#34;&gt;脚本执行结果&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;E:\github_projects\python-crawler&amp;gt;python 2_get_hotNews_and_store_data_in_mysqldb.py
习近平：扶贫工作不搞层层加码
7月20日的国务院常务会定了这3件大事
《寒战2》3D电影引争议 特效渣渣有圈钱之嫌

习近平：扶贫工作不搞层层加码
7月20日的国务院常务会定了这3件大事
《寒战2》3D电影引争议 特效渣渣有圈钱之嫌

((&#39;习近平：扶贫工作不搞层层加码&#39;, &#39;2016-07-22 03:12:12&#39;, &#39;2016-07-22&#39;),)          
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/14011160/how-to-use-python-mysqldb-to-insert-many-rows-at-once&#34;&gt;http://stackoverflow.com/questions/14011160/how-to-use-python-mysqldb-to-insert-many-rows-at-once&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.mysqltutorial.org/python-mysql-insert/&#34;&gt;http://www.mysqltutorial.org/python-mysql-insert/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>python脚本爬取今日百度热点新闻</title>
      <link>http://learnbetter.club/2016/07/python3-get-baidu-hotnews/</link>
      <pubDate>Mon, 25 Jul 2016 22:04:40 +0000</pubDate>
      <author>penn201500@gmail.com (penn)</author>
      <guid>http://learnbetter.club/2016/07/python3-get-baidu-hotnews/</guid>
      <description>

&lt;hr /&gt;

&lt;p&gt;python脚本爬取今日百度热点新闻&lt;/p&gt;

&lt;h2 id=&#34;目标:51d7ec03a9202dc68598c4c34fbad920&#34;&gt;目标：&lt;/h2&gt;

&lt;p&gt;python脚本爬取今日百度热点新闻&lt;/p&gt;

&lt;h2 id=&#34;知识点:51d7ec03a9202dc68598c4c34fbad920&#34;&gt;知识点：&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;python3使用 urllib.request.urlopen 去打开一个特定网址&lt;/li&gt;
&lt;li&gt;中文可以加 decode(&amp;lsquo;gbk&amp;rsquo;) 来避免乱码&lt;/li&gt;
&lt;li&gt;re.S 用来解决跨行匹配的问题，用法： re.compile(pattern, re.S)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;代码:51d7ec03a9202dc68598c4c34fbad920&#34;&gt;代码&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import urllib.request
import re

url = &#39;http://news.baidu.com/&#39;
content = urllib.request.urlopen(url).read().decode(&#39;gbk&#39;)

#Example：
#&amp;lt;li class=&amp;quot;hdline0&amp;quot;&amp;gt;
#&amp;lt;i class=&amp;quot;dot&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;
#&amp;lt;strong&amp;gt;
#&amp;lt;a href=&amp;quot;http://china.huanqiu.com/article/2016-07/9209287.html?from=bdwz &amp;quot; target=&amp;quot;_blank&amp;quot; class=&amp;quot;a3&amp;quot; mon=&amp;quot;ct=1&amp;amp;amp;a=1&amp;amp;amp;c=top&amp;amp;amp;pn=0&amp;quot;&amp;gt;xxx：扶贫工作不搞层层加码&amp;lt;/a&amp;gt;
#&amp;lt;/strong&amp;gt;
#&amp;lt;/li&amp;gt;

pattern = re.compile(&#39;&amp;lt;li class=&amp;quot;hd.*?&amp;lt;strong&amp;gt;.*?&amp;lt;a.*?&amp;gt;(.*?)&amp;lt;/a&amp;gt;.*?strong&amp;gt;&#39;, re.S)
hotNews = re.findall(pattern, content)

for i in hotNews:
  print(i)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;hotnews-from-baidu:51d7ec03a9202dc68598c4c34fbad920&#34;&gt;hotnews from baidu:&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://o7ubfyghw.bkt.clouddn.com/baidu%20hotnews.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;script-excute-result:51d7ec03a9202dc68598c4c34fbad920&#34;&gt;script excute result:&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://o7ubfyghw.bkt.clouddn.com/crawler%20baidu%20hotNews.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
    </item>
    
  </channel>
</rss>